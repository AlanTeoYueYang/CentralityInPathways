plot(1:200,(apply(dif.array.pgssc, 2, mean))**3)
plot(1:200,(apply(dif.array.pgssc, 2, mean))**4)
plot(1:200,(apply(dif.array.pgssc, 2, mean))**5)
#PageRank Centrality
pgr.ssc <- function(someMat){
igraph.obj   <- igraph::graph_from_adjacency_matrix(someMat,mode = "directed")
igraph.obj2  <- igraph::graph_from_adjacency_matrix(t(someMat),mode = "directed")
### Source Directed pageRank
pgr.source.vec   <- igraph::page.rank(igraph.obj,damping = 0.9)
pgr.source.vec   <- pgr.source.vec$vector
###Source-Sink pageRank
pgr.sink.vec     <- igraph::page.rank(igraph.obj2,damping = 0.9)
pgr.sink.vec     <- pgr.sink.vec$vector
pgr.ssc.vec      <- pgr.source.vec + pgr.sink.vec
pgr.ssc.rank <- rank(pgr.ssc.vec, ties.method = "min")
return(pgr.ssc.rank)
}
apop.pgr.rank <- pgr.ssc(apop.mat)
dif.array.pgssc <- matrix(NA,500,200)
zero.inds <- which(apop.mat ==0)
for (j in 1:200){
for (i in 1:500){
set.seed((10000*j)+i)
temp.inds <- sample(zero.inds,j)
apop.mat[temp.inds] <- 1
cent.rand.vec  <- pgr.ssc(apop.mat)
rand.rank      <- rank(cent.rand.vec, ties.method = "min")
dif.array.pgssc[i,j]   <- sqrt(sum((apop.pgr.rank - rand.rank) **2))
apop.mat[temp.inds] <- 0
}
}
plot(1:200,(apply(dif.array.pgssc, 2, mean))**5)
plot(1:200,(apply(dif.array.pgssc, 2, mean))**3)
plot(1:200,(apply(dif.array.pgssc, 2, mean))**4)
plot(1:200,(apply(dif.array.pgssc, 2, mean))**5)
# Enter Source-Sink Centrality
ssc.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.5, beta = 1)
ssc.vec  <- rowSums(ssc.mat)
ssc.rank <- rank(ssc.vec, ties.method = "min")
dif.array <- matrix(NA,100,20)
dif.array <- matrix(NA,100,200)
zero.inds <- which(apop.mat ==0)
for (j in 1:20){
for (i in 1:100){
set.seed((10000*j)+i)
temp.inds <- sample(zero.inds,j)
apop.mat[temp.inds] <- 1
cent.rand.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.5,
beta = 1)
cent.rand.vec  <- rowSums(cent.rand.mat)
rand.rank      <- rank(cent.rand.vec, ties.method = "min")
dif.array[i,j]   <- sqrt(sum((ssc.rank - rand.rank) **2))
apop.mat[temp.inds] <- 0
}
}
# Enter Source-Sink Centrality
ssc.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.4, beta = 1)
apop.Graph   <- pathways.collection[["04012.xml"]]
node.names   <- nodes(apop.Graph)
node.ENTREZ  <- KEGGgraph::translateKEGGID2GeneID(node.names)
node.genes   <- getSYMBOL(node.ENTREZ,data='org.Hs.eg')
apop.mat     <- as(apop.Graph,"matrix")
# Enter Source-Sink Centrality
ssc.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.4, beta = 1)
ssc.vec  <- rowSums(ssc.mat)
ssc.rank <- rank(ssc.vec, ties.method = "min")
dif.array <- matrix(NA,100,200)
zero.inds <- which(apop.mat ==0)
for (j in 1:20){
for (i in 1:100){
set.seed((10000*j)+i)
temp.inds <- sample(zero.inds,j)
apop.mat[temp.inds] <- 1
cent.rand.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.5,
beta = 1)
cent.rand.vec  <- rowSums(cent.rand.mat)
rand.rank      <- rank(cent.rand.vec, ties.method = "min")
dif.array[i,j]   <- sqrt(sum((ssc.rank - rand.rank) **2))
apop.mat[temp.inds] <- 0
}
}
apop.Graph   <- pathways.collection[["04012.xml"]]
node.names   <- nodes(apop.Graph)
node.ENTREZ  <- KEGGgraph::translateKEGGID2GeneID(node.names)
node.genes   <- getSYMBOL(node.ENTREZ,data='org.Hs.eg')
apop.mat     <- as(apop.Graph,"matrix")
# Enter Source-Sink Centrality
ssc.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.3, beta = 1)
ssc.vec  <- rowSums(ssc.mat)
ssc.rank <- rank(ssc.vec, ties.method = "min")
dif.array <- matrix(NA,100,200)
zero.inds <- which(apop.mat ==0)
for (j in 1:20){
for (i in 1:100){
set.seed((10000*j)+i)
temp.inds <- sample(zero.inds,j)
apop.mat[temp.inds] <- 1
cent.rand.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.3,
beta = 1)
cent.rand.vec  <- rowSums(cent.rand.mat)
rand.rank      <- rank(cent.rand.vec, ties.method = "min")
dif.array[i,j]   <- sqrt(sum((ssc.rank - rand.rank) **2))
apop.mat[temp.inds] <- 0
}
}
### This observation is fantastic!!! Difference is cubic with number of edges
plot(1:200,(apply(dif.array, 2, mean))**3)
for (j in 1:200){
for (i in 1:100){
set.seed((10000*j)+i)
temp.inds <- sample(zero.inds,j)
apop.mat[temp.inds] <- 1
cent.rand.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.3,
beta = 1)
cent.rand.vec  <- rowSums(cent.rand.mat)
rand.rank      <- rank(cent.rand.vec, ties.method = "min")
dif.array[i,j]   <- sqrt(sum((ssc.rank - rand.rank) **2))
apop.mat[temp.inds] <- 0
}
}
### This observation is fantastic!!! Difference is cubic with number of edges
plot(1:200,(apply(dif.array, 2, mean))**3)
dif.array
dif.array[,100]
dif.array[,50]
dif.array[,70]
### This observation is fantastic!!! Difference is cubic with number of edges
plot(1:200,(apply(dif.array, 2, mean)))
# Enter Source-Sink Centrality
ssc.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.2, beta = 1)
ssc.vec  <- rowSums(ssc.mat)
ssc.rank <- rank(ssc.vec, ties.method = "min")
dif.array <- matrix(NA,100,200)
zero.inds <- which(apop.mat ==0)
for (j in 1:200){
for (i in 1:100){
set.seed((10000*j)+i)
temp.inds <- sample(zero.inds,j)
apop.mat[temp.inds] <- 1
cent.rand.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.2,
beta = 1)
cent.rand.vec  <- rowSums(cent.rand.mat)
rand.rank      <- rank(cent.rand.vec, ties.method = "min")
dif.array[i,j]   <- sqrt(sum((ssc.rank - rand.rank) **2))
apop.mat[temp.inds] <- 0
}
}
### This observation is fantastic!!! Difference is cubic with number of edges
plot(1:200,(apply(dif.array, 2, mean)))
dif.array <- matrix(NA,100,400)
zero.inds <- which(apop.mat ==0)
for (j in 1:400){
for (i in 1:100){
set.seed((10000*j)+i)
temp.inds <- sample(zero.inds,j)
apop.mat[temp.inds] <- 1
cent.rand.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.2,
beta = 1)
cent.rand.vec  <- rowSums(cent.rand.mat)
rand.rank      <- rank(cent.rand.vec, ties.method = "min")
dif.array[i,j]   <- sqrt(sum((ssc.rank - rand.rank) **2))
apop.mat[temp.inds] <- 0
}
}
### This observation is fantastic!!! Difference is cubic with number of edges
plot(1:400,(apply(dif.array, 2, mean)))
# Enter Source-Sink Centrality
ssc.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.4, beta = 1)
ssc.vec  <- rowSums(ssc.mat)
ssc.rank <- rank(ssc.vec, ties.method = "min")
dif.array <- matrix(NA,100,400)
zero.inds <- which(apop.mat ==0)
for (j in 1:400){
for (i in 1:100){
set.seed((10000*j)+i)
temp.inds <- sample(zero.inds,j)
apop.mat[temp.inds] <- 1
cent.rand.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.4,
beta = 1)
cent.rand.vec  <- rowSums(cent.rand.mat)
rand.rank      <- rank(cent.rand.vec, ties.method = "min")
dif.array[i,j]   <- sqrt(sum((ssc.rank - rand.rank) **2))
apop.mat[temp.inds] <- 0
}
}
### This observation is fantastic!!! Difference is cubic with number of edges
plot(1:400,(apply(dif.array, 2, mean)))
ssc.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.35, beta = 1)
ssc.vec  <- rowSums(ssc.mat)
ssc.rank <- rank(ssc.vec, ties.method = "min")
dif.array <- matrix(NA,100,400)
zero.inds <- which(apop.mat ==0)
for (j in 1:400){
for (i in 1:100){
set.seed((10000*j)+i)
temp.inds <- sample(zero.inds,j)
apop.mat[temp.inds] <- 1
cent.rand.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.35,
beta = 1)
cent.rand.vec  <- rowSums(cent.rand.mat)
rand.rank      <- rank(cent.rand.vec, ties.method = "min")
dif.array[i,j]   <- sqrt(sum((ssc.rank - rand.rank) **2))
apop.mat[temp.inds] <- 0
}
}
### This observation is fantastic!!! Difference is cubic with number of edges
plot(1:400,(apply(dif.array, 2, mean)))
pathways.collection.names
apop.Graph   <- pathways.collection[["04014.xml"]]
apop.Graph
node.names   <- nodes(apop.Graph)
node.ENTREZ  <- KEGGgraph::translateKEGGID2GeneID(node.names)
node.genes   <- getSYMBOL(node.ENTREZ,data='org.Hs.eg')
apop.mat     <- as(apop.Graph,"matrix")
# Enter Source-Sink Centrality
ssc.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.35, beta = 1)
ssc.vec  <- rowSums(ssc.mat)
ssc.rank <- rank(ssc.vec, ties.method = "min")
dif.array <- matrix(NA,100,100)
zero.inds <- which(apop.mat ==0)
for (j in 1:400){
for (i in 1:100){
set.seed((10000*j)+i)
temp.inds <- sample(zero.inds,j)
apop.mat[temp.inds] <- 1
cent.rand.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.35,
beta = 1)
cent.rand.vec  <- rowSums(cent.rand.mat)
rand.rank      <- rank(cent.rand.vec, ties.method = "min")
dif.array[i,j]   <- sqrt(sum((ssc.rank - rand.rank) **2))
apop.mat[temp.inds] <- 0
}
}
### This observation is fantastic!!! Difference is cubic with number of edges
plot(1:400,(apply(dif.array, 2, mean)))
### This observation is fantastic!!! Difference is cubic with number of edges
plot(1:40,(apply(dif.array, 2, mean)))
dif.array
apop.Graph   <- pathways.collection[["04014.xml"]]
node.names   <- nodes(apop.Graph)
node.ENTREZ  <- KEGGgraph::translateKEGGID2GeneID(node.names)
node.genes   <- getSYMBOL(node.ENTREZ,data='org.Hs.eg')
apop.mat     <- as(apop.Graph,"matrix")
## ErbB is "04012.xml  Ras is "04014.xml
apop.Graph   <- pathways.collection[["04014.xml"]]
node.names   <- nodes(apop.Graph)
node.ENTREZ  <- KEGGgraph::translateKEGGID2GeneID(node.names)
node.genes   <- getSYMBOL(node.ENTREZ,data='org.Hs.eg')
apop.mat     <- as(apop.Graph,"matrix")
# Enter Source-Sink Centrality
ssc.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.1, beta = 1)
ssc.vec  <- rowSums(ssc.mat)
ssc.rank <- rank(ssc.vec, ties.method = "min")
dif.array <- matrix(NA,100,100)
zero.inds <- which(apop.mat ==0)
for (j in 1:100){
for (i in 1:100){
set.seed((10000*j)+i)
temp.inds <- sample(zero.inds,j)
apop.mat[temp.inds] <- 1
cent.rand.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.1,
beta = 1)
cent.rand.vec  <- rowSums(cent.rand.mat)
rand.rank      <- rank(cent.rand.vec, ties.method = "min")
dif.array[i,j]   <- sqrt(sum((ssc.rank - rand.rank) **2))
apop.mat[temp.inds] <- 0
}
}
### This observation is fantastic!!! Difference is cubic with number of edges
plot(1:100,(apply(dif.array, 2, mean)))
### This observation is fantastic!!! Difference is cubic with number of edges
plot(1:100,(apply(dif.array, 2, mean))**3)
### This observation is fantastic!!! Difference is cubic with number of edges
plot(1:100,(apply(dif.array, 2, mean))**4)
### This observation is fantastic!!! Difference is cubic with number of edges
plot(1:100,(apply(dif.array, 2, mean))**3)
ssc.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.1, beta = 1)
ssc.vec  <- rowSums(ssc.mat)
ssc.rank <- rank(ssc.vec, ties.method = "min")
dif.array <- matrix(NA,100,400)
zero.inds <- which(apop.mat ==0)
for (j in 1:400){
for (i in 1:100){
set.seed((10000*j)+i)
temp.inds <- sample(zero.inds,j)
apop.mat[temp.inds] <- 1
cent.rand.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.1,
beta = 1)
cent.rand.vec  <- rowSums(cent.rand.mat)
rand.rank      <- rank(cent.rand.vec, ties.method = "min")
dif.array[i,j]   <- sqrt(sum((ssc.rank - rand.rank) **2))
apop.mat[temp.inds] <- 0
}
}
### This observation is fantastic!!! Difference is cubic with number of edges
plot(1:400,(apply(dif.array, 2, mean))**3)
### This observation is fantastic!!! Difference is cubic with number of edges
plot(1:400,(apply(dif.array, 2, mean))**4)
### This observation is fantastic!!! Difference is cubic with number of edges
plot(1:400,(apply(dif.array, 2, mean))**5)
# Enter Source-Sink Centrality
ssc.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.1, beta = 1)
ssc.vec  <- rowSums(ssc.mat)
ssc.rank <- rank(ssc.vec, ties.method = "min")
dif.array <- matrix(NA,50,600)
zero.inds <- which(apop.mat ==0)
dif.array <- matrix(NA,50,600)
zero.inds <- which(apop.mat ==0)
for (j in 1:400){
for (i in 1:100){
set.seed((10000*j)+i)
temp.inds <- sample(zero.inds,j)
apop.mat[temp.inds] <- 1
cent.rand.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.2,
beta = 1)
cent.rand.vec  <- rowSums(cent.rand.mat)
rand.rank      <- rank(cent.rand.vec, ties.method = "min")
dif.array[i,j]   <- sqrt(sum((ssc.rank - rand.rank) **2))
apop.mat[temp.inds] <- 0
}
}
apop.Graph   <- pathways.collection[["04014.xml"]]
node.names   <- nodes(apop.Graph)
node.ENTREZ  <- KEGGgraph::translateKEGGID2GeneID(node.names)
node.genes   <- getSYMBOL(node.ENTREZ,data='org.Hs.eg')
apop.mat     <- as(apop.Graph,"matrix")
# Enter Source-Sink Centrality
ssc.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.2, beta = 1)
ssc.vec  <- rowSums(ssc.mat)
ssc.rank <- rank(ssc.vec, ties.method = "min")
dif.array <- matrix(NA,50,600)
zero.inds <- which(apop.mat ==0)
for (j in 1:400){
for (i in 1:600){
set.seed((10000*j)+i)
temp.inds <- sample(zero.inds,j)
apop.mat[temp.inds] <- 1
cent.rand.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.2,
beta = 1)
cent.rand.vec  <- rowSums(cent.rand.mat)
rand.rank      <- rank(cent.rand.vec, ties.method = "min")
dif.array[i,j]   <- sqrt(sum((ssc.rank - rand.rank) **2))
apop.mat[temp.inds] <- 0
}
}
# Enter Source-Sink Centrality
ssc.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.2, beta = 1)
ssc.vec  <- rowSums(ssc.mat)
ssc.rank <- rank(ssc.vec, ties.method = "min")
dif.array <- matrix(NA,50,600)
zero.inds <- which(apop.mat ==0)
for (j in 1:50){
for (i in 1:600){
set.seed((10000*j)+i)
temp.inds <- sample(zero.inds,j)
apop.mat[temp.inds] <- 1
cent.rand.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.2,
beta = 1)
cent.rand.vec  <- rowSums(cent.rand.mat)
rand.rank      <- rank(cent.rand.vec, ties.method = "min")
dif.array[i,j]   <- sqrt(sum((ssc.rank - rand.rank) **2))
apop.mat[temp.inds] <- 0
}
}
# Enter Source-Sink Centrality
ssc.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.2, beta = 1)
ssc.vec  <- rowSums(ssc.mat)
ssc.rank <- rank(ssc.vec, ties.method = "min")
dif.array <- matrix(NA,50,600)
zero.inds <- which(apop.mat ==0)
for (j in 1:50){
for (i in 1:600){
set.seed((10000*j)+i)
temp.inds <- sample(zero.inds,j)
apop.mat[temp.inds] <- 1
cent.rand.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.2,
beta = 1)
cent.rand.vec  <- rowSums(cent.rand.mat)
rand.rank      <- rank(cent.rand.vec, ties.method = "min")
dif.array[i,j]   <- sqrt(sum((ssc.rank - rand.rank) **2))
apop.mat[temp.inds] <- 0
}
}
dif.array <- matrix(NA,50,600)
zero.inds <- which(apop.mat ==0)
## ErbB is "04012.xml  Ras is "04014.xml
apop.Graph   <- pathways.collection[["04014.xml"]]
node.names   <- nodes(apop.Graph)
node.ENTREZ  <- KEGGgraph::translateKEGGID2GeneID(node.names)
node.genes   <- getSYMBOL(node.ENTREZ,data='org.Hs.eg')
apop.mat     <- as(apop.Graph,"matrix")
# Enter Source-Sink Centrality
ssc.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.2, beta = 1)
ssc.vec  <- rowSums(ssc.mat)
ssc.rank <- rank(ssc.vec, ties.method = "min")
dif.array <- matrix(NA,50,600)
zero.inds <- which(apop.mat ==0)
for (j in 1:600){
for (i in 1:50){
set.seed((10000*j)+i)
temp.inds <- sample(zero.inds,j)
apop.mat[temp.inds] <- 1
cent.rand.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.2,
beta = 1)
cent.rand.vec  <- rowSums(cent.rand.mat)
rand.rank      <- rank(cent.rand.vec, ties.method = "min")
dif.array[i,j]   <- sqrt(sum((ssc.rank - rand.rank) **2))
apop.mat[temp.inds] <- 0
}
}
### This observation is fantastic!!! Difference is cubic with number of edges
plot(1:600,(apply(dif.array, 2, mean))**5)
### This observation is fantastic!!! Difference is cubic with number of edges
plot(1:600,(apply(dif.array, 2, mean)))
apop.Graph
apop.mat
matrix(0,nrow(apop.mat),nrow(apop.mat))
apop.mat <- matrix(0,nrow(apop.mat),nrow(apop.mat))
dif.array <- matrix(NA,50,600)
apop.mat <- matrix(0,nrow(apop.mat),nrow(apop.mat))
dif.array <- matrix(NA,50,400)
zero.inds <- which(apop.mat ==0)
for (j in 1:400){
for (i in 1:20){
set.seed((10000*j)+i)
temp.inds <- sample(zero.inds,j)
apop.mat[temp.inds] <- 1
cent.rand.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.2,
beta = 1)
cent.rand.vec  <- rowSums(cent.rand.mat)
rand.rank      <- rank(cent.rand.vec, ties.method = "min")
dif.array[i,j]   <- sqrt(sum((ssc.rank - rand.rank) **2))
apop.mat[temp.inds] <- 0
}
}
dif.array <- matrix(NA,20,100)
zero.inds <- which(apop.mat ==0)
apop.mat
dif.array <- matrix(NA,20,100)
zero.inds <- which(apop.mat ==0)
for (j in 1:100){
for (i in 1:20){
set.seed((10000*j)+i)
temp.inds <- sample(zero.inds,j)
apop.mat[temp.inds] <- 1
cent.rand.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.2,
beta = 1)
cent.rand.vec  <- rowSums(cent.rand.mat)
rand.rank      <- rank(cent.rand.vec, ties.method = "min")
dif.array[i,j]   <- sqrt(sum((ssc.rank - rand.rank) **2))
apop.mat[temp.inds] <- 0
}
}
### This observation is fantastic!!! Difference is cubic with number of edges
plot(1:100,(apply(dif.array, 2, mean)))
apop.mat <- matrix(0,nrow(apop.mat),nrow(apop.mat))
dif.array <- matrix(NA,20,300)
zero.inds <- which(apop.mat ==0)
for (j in 1:300){
for (i in 1:20){
set.seed((10000*j)+i)
temp.inds <- sample(zero.inds,j)
apop.mat[temp.inds] <- 1
cent.rand.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.2,
beta = 1)
cent.rand.vec  <- rowSums(cent.rand.mat)
rand.rank      <- rank(cent.rand.vec, ties.method = "min")
dif.array[i,j]   <- sqrt(sum((ssc.rank - rand.rank) **2))
apop.mat[temp.inds] <- 0
}
}
### This observation is fantastic!!! Difference is cubic with number of edges
plot(1:300,(apply(dif.array, 2, mean)))
## ErbB is "04012.xml  Ras is "04014.xml
apop.Graph   <- pathways.collection[["04014.xml"]]
node.names   <- nodes(apop.Graph)
node.ENTREZ  <- KEGGgraph::translateKEGGID2GeneID(node.names)
node.genes   <- getSYMBOL(node.ENTREZ,data='org.Hs.eg')
apop.mat     <- as(apop.Graph,"matrix")
## ErbB is "04012.xml  Ras is "04014.xml
apop.Graph   <- pathways.collection[["04014.xml"]]
node.names   <- nodes(apop.Graph)
node.ENTREZ  <- KEGGgraph::translateKEGGID2GeneID(node.names)
node.genes   <- getSYMBOL(node.ENTREZ,data='org.Hs.eg')
apop.mat     <- as(apop.Graph,"matrix")
## ErbB is "04012.xml  Ras is "04014.xml
apop.Graph   <- pathways.collection[["04012.xml"]]
node.names   <- nodes(apop.Graph)
node.ENTREZ  <- KEGGgraph::translateKEGGID2GeneID(node.names)
node.genes   <- getSYMBOL(node.ENTREZ,data='org.Hs.eg')
apop.mat     <- as(apop.Graph,"matrix")
ssc.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.2, beta = 1)
ssc.vec  <- rowSums(ssc.mat)
ssc.rank <- rank(ssc.vec, ties.method = "min")
#
pert.range  <- 300
pert.rpt    <- 50
dif.array <- matrix(NA,pert.rpt,pert.range)
zero.inds <- which(apop.mat ==0)
for (j in 1:pert.range){
for (i in 1:pert.rpt){
set.seed((10000*j)+i)
temp.inds <- sample(zero.inds,j)
apop.mat[temp.inds] <- 1
cent.rand.mat  <- CADIA::newpath.centrality(apop.mat,alpha = 0.2,
beta = 1)
cent.rand.vec  <- rowSums(cent.rand.mat)
rand.rank      <- rank(cent.rand.vec, ties.method = "min")
dif.array[i,j]   <- sqrt(sum((ssc.rank - rand.rank) **2))
apop.mat[temp.inds] <- 0
}
}
