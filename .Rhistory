aa <- gather(aa, key = "Centrality", value = "cent_value",-c(12))
aa$cent_value <- as.numeric(aa$cent_value)
feat.list <- colnames(aa2)
feat.list <- feat.list[-12]
ks.list <- list()
for (i in feat.list){
temp <- aa2[,i]
temp <- as.numeric(pull(temp))
this.test <- ks.test(temp[aa2$V12 == "Cancer"],
temp[aa2$V12 == "Normal"],
alternative = "less")
ks.list <- rbind(ks.list,this.test$p.value)
}
ks.list <- data.frame(cbind(feat.list,ks.list))
ks.pvals <- formatC(unlist(ks.list$V2), digits = 3)
ks.pvals <- paste("KS p-value <",ks.pvals)
aa3 <- rbind(aa,mutate(aa,V12= "All Genes"))
unique(aa3$Centrality)
ggplot(aa3,aes(cent_value,color = V12)) +
stat_ecdf(geom = "line", size = 1.3,alpha=0.9) + facet_wrap(~Centrality ,ncol = 3)+theme_bw()+
labs(x = "Quantile of the Z-normliazed Centrality Scores (Eq. 23)", y = "Cumulative Density")+
guides(colour = guide_legend(override.aes = list(size=15),show.legend = "line")) +
theme(strip.text = element_text(face="bold", size=20),
plot.title = element_text(size = 20),
axis.title = element_text(size = 35),
legend.text = element_text(size = 25),
legend.title=element_blank(),
axis.text.y=element_text(size = 20),
axis.text.x=element_text(size = 20),
axis.ticks.y=element_blank(),
legend.position=c(0.85, 0.1), legend.box = "horizontal") +
geom_text(data=data.frame(x=50, y=0.9, label=ks.pvals,
Centrality = unlist(ks.list$feat.list)),
aes(x,y,label=label),size = 7, inherit.aes=FALSE)
ggsave("images/Human_KSstats.pdf",
width = 18, height = 20, units = c("in"))
rm(list = ls())
library(dplyr)
library(broom)
library(ggplot2)
library(xtable)
gene.essential <- readRDS("Mouse Processing/MMgene_essentials.rds")
gene.essential$Description <- factor(gene.essential$Description)
# levels(gene.temp$Description)
gene.essential$Description <- relevel(gene.essential$Description,ref = "Normal")
a1 <- gene.essential %>% group_by(katz.ssc.quant, Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Lethal") %>%
mutate(., Centrality = "Katz-Source-Sink",quant = katz.ssc.quant)
a2 <- gene.essential %>% group_by(katz.source.quant, Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Lethal") %>%
mutate(., Centrality = "Katz-Source",quant = katz.source.quant)
a3 <- gene.essential %>% group_by(katz.sink.quant, Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Lethal") %>%
mutate(., Centrality = "Katz-Sink",quant = katz.sink.quant)
b <- gene.essential %>% group_by(deg.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Lethal") %>%
mutate(Centrality = "Degree",quant = deg.quant )
d1 <- gene.essential %>% group_by(pgr.source.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Lethal") %>%
mutate(Centrality = "PageRank-Source",quant = pgr.source.quant)
d2 <- gene.essential %>% group_by(pgr.sink.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Lethal") %>%
mutate(Centrality = "PageRank-Sink",quant = pgr.sink.quant)
d3 <- gene.essential %>% group_by(pgr.ssc.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Lethal") %>%
mutate(Centrality = "PageRank-SSC",quant = pgr.ssc.quant)
d4 <- gene.essential %>% group_by(pgr.und.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Lethal")  %>%
mutate(Centrality = "PageRank-Und",quant = pgr.und.quant )
h1 <- gene.essential %>% group_by(lap.source.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Lethal")  %>%
mutate(Centrality = "Lap-Source",quant = lap.source.quant )
h2 <- gene.essential %>% group_by(lap.sink.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Lethal")  %>%
mutate(Centrality = "Lap-Sink",quant = lap.sink.quant )
h3 <- gene.essential %>% group_by(lap.ssc.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Lethal")  %>%
mutate(Centrality = "Lap-SSC",quant = lap.ssc.quant )
total <- rbind(a1,a2,a3,b,d1,d2,d3,d4,h1,h2,h3)
overall.cors <- total %>% group_by(Centrality) %>%
do(fit = lm(freq ~ as.numeric(quant), data=.)) %>%  glance(fit)
overall.cors  <- overall.cors[,c(1,2,3,6)]
adjusted.pval <- p.adjust(unlist(overall.cors[,4]),method = "fdr")
adjusted.pval <- formatC(adjusted.pval, format = "e", digits = 2)
overall.cors[,4] <- formatC(unlist(pull(overall.cors[,4])), format = "e", digits = 2)
print(xtable(overall.cors), include.rownames = F)
text.vals <- paste("Adjusted r-squared:",formatC(pull(overall.cors[,2]),digits = 2),
"\n p-value:", pull(overall.cors[,4]), "\n Adj p-value:",
adjusted.pval)
overall.cors$label <- text.vals
ggplot(total, aes(y = 100 * freq, x= quant)) + geom_point()+
geom_smooth(method= "lm") + #geom_smooth(method= "loess", color="green" , fill = "red") +
facet_wrap(~Centrality ,ncol = 3) +theme_bw()+
labs(x = "Normalized Centrality Score (Eq. 20)", y = "% of Genes that are Lethal (Eq. 20)")+
theme(strip.text = element_text(face="bold", size=20),
plot.title = element_text(size = 20),
axis.title = element_text(size = 30),
legend.text = element_text(size = 9),
legend.title=element_text(face = "bold", size = 9),
axis.text.y=element_text(size = 12),
axis.text.x=element_text(size = 12),
axis.ticks.y=element_blank()) +
geom_text(data=overall.cors, x = 50, y =30,
aes(x,y,label=label),size = 6, inherit.aes=FALSE)
ggsave("images/Mouse_Regression.pdf",
width = 10, height = 18, units = c("in"))
### There is something wrong with this test that I cannot tell.
rm(list = ls())
require(dplyr)
require(ggplot2)
require(Hmisc)
require(tidyr)
require(broom)
require(xtable)
gene.essential <- readRDS("Mouse Processing/MMgene_essentials.rds")
feature.list <-  grep("norm",names(gene.essential), value = T)
feature.list <- feature.list[-c(4,6,7,8,9)]
feature.list <- gsub(".norm","",feature.list)
feature.list <- gsub("[.]","-",feature.list)
feature.list <- gsub("source","Source",feature.list)
feature.list <- gsub("sink","Sink",feature.list)
feature.list <- gsub("(^[[:alpha:]])", "\\U\\1", feature.list, perl=TRUE)
feature.list <- gsub("ssc","SSC",feature.list)
feature.list <- gsub("Pgr","PageRank",feature.list)
temp.zz <- names(gene.essential)
temp.zz <- gsub(".norm","",temp.zz)
temp.zz <- gsub("[.]","-",temp.zz)
temp.zz <- gsub("source","Source",temp.zz)
temp.zz <- gsub("sink","Sink",temp.zz)
temp.zz <- gsub("(^[[:alpha:]])", "\\U\\1", temp.zz, perl=TRUE)
temp.zz <- gsub("ssc","SSC",temp.zz)
temp.zz <- gsub("Pgr","PageRank",temp.zz)
names(gene.essential) <- temp.zz
aa <-     gene.essential %>%
gather(., key = "Centrality", value = "cent_value",
gather_cols=feature.list) %>%  group_by(Centrality) %>%
mutate(.,zz = as.factor(cut2(cent_value,m = 3, g = 100))) %>%
group_by(Centrality) %>% mutate(., zz = as.factor(zz))
aa <- lapply(gene.essential[,feature.list],
FUN = function(X){as.factor(cut2(X,m=3,g=100))})
aa <- sapply(aa, function(X){levels(X) <- 1:100; return(X)})
aa <- cbind(aa,gene.essential$Description)
aa <- as_data_frame(aa)
aa2 <- as_data_frame(aa)
aa <- gather(aa, key = "Centrality", value = "cent_value",-c(12))
aa$cent_value <- as.numeric(aa$cent_value)
feat.list <- colnames(aa2)
feat.list <- feat.list[-12]
ks.list <- list()
for (i in feat.list){
temp <- aa2[,i]
temp <- as.numeric(pull(temp))
this.test <- ks.test(temp[aa2$V12 == "Lethal"],
temp[aa2$V12 == "Normal"],
alternative = "less")
ks.list <- rbind(ks.list,this.test$p.value)
}
ks.list <- data.frame(cbind(feat.list,ks.list))
ks.pvals <- formatC(unlist(ks.list$V2), digits = 3)
ks.pvals <- paste("KS p-value <",ks.pvals)
aa3 <- rbind(aa,mutate(aa,V12= "All Genes"))
ggplot(aa3,aes(cent_value,color = V12)) +
stat_ecdf(geom = "line", size = 0.8,alpha=0.9) + facet_wrap(~Centrality ,ncol = 3)+theme_bw()+
labs(x = "Quantile", y = "Cumulative Density")+
guides(colour = guide_legend(override.aes = list(size=15),show.legend = "line")) +
theme(strip.text = element_text(face="bold", size=20),
plot.title = element_text(size = 20),
axis.title = element_text(size = 25),
legend.text = element_text(size = 25),
legend.title=element_blank(),
axis.text.y=element_text(size = 20),
axis.text.x=element_text(size = 20),
axis.ticks.y=element_blank(),
legend.position=c(0.85, 0.1), legend.box = "horizontal") +
geom_text(data=data.frame(x=50, y=0.9, label=ks.pvals,
Centrality = unlist(ks.list$feat.list)),
aes(x,y,label=label),size = 7, inherit.aes=FALSE)
ggplot(aa3,aes(cent_value,color = V12)) +
stat_ecdf(geom = "line", size = 1.3,alpha=0.9) + facet_wrap(~Centrality ,ncol = 3)+theme_bw()+
labs(x = "Quantile of the Z-normliazed Centrality Scores (Eq. 23)", y = "Cumulative Density")+
guides(colour = guide_legend(override.aes = list(size=15),show.legend = "line")) +
theme(strip.text = element_text(face="bold", size=20),
plot.title = element_text(size = 20),
axis.title = element_text(size = 35),
legend.text = element_text(size = 25),
legend.title=element_blank(),
axis.text.y=element_text(size = 20),
axis.text.x=element_text(size = 20),
axis.ticks.y=element_blank(),
legend.position=c(0.85, 0.1), legend.box = "horizontal") +
geom_text(data=data.frame(x=50, y=0.9, label=ks.pvals,
Centrality = unlist(ks.list$feat.list)),
aes(x,y,label=label),size = 7, inherit.aes=FALSE)
ggsave("images/Mouse_KSstats.pdf",
width = 18, height = 20, units = c("in"))
rm(list = ls())
library(dplyr)
library(broom)
library(ggplot2)
library(xtable)
gene.essential <- readRDS("Human Processing/gene_essentials.rds")
gene.essential$Description <- factor(gene.essential$Description)
# levels(gene.temp$Description)
gene.essential$Description <- relevel(gene.essential$Description,ref = "Normal")
a1 <- gene.essential %>% group_by(katz.ssc.quant, Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Cancer") %>%
mutate(., Centrality = "Katz-SSC",quant = katz.ssc.quant)
a2 <- gene.essential %>% group_by(katz.source.quant, Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Cancer") %>%
mutate(., Centrality = "Katz-Source",quant = katz.source.quant)
a3 <- gene.essential %>% group_by(katz.sink.quant, Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Cancer") %>%
mutate(., Centrality = "Katz-Sink",quant = katz.sink.quant)
b <- gene.essential %>% group_by(deg.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Cancer") %>%
mutate(Centrality = "Degree",quant = deg.quant )
d1 <- gene.essential %>% group_by(pgr.source.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Cancer") %>%
mutate(Centrality = "PageRank-Source",quant = pgr.source.quant)
d2 <- gene.essential %>% group_by(pgr.sink.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Cancer") %>%
mutate(Centrality = "PageRank-Sink",quant = pgr.sink.quant)
d3 <- gene.essential %>% group_by(pgr.ssc.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Cancer") %>%
mutate(Centrality = "PageRank-SSC",quant = pgr.ssc.quant)
d4 <- gene.essential %>% group_by(pgr.und.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Cancer")  %>%
mutate(Centrality = "PageRank-Und",quant = pgr.und.quant )
h1 <- gene.essential %>% group_by(lap.source.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Cancer")  %>%
mutate(Centrality = "Lap-Source",quant = lap.source.quant )
h2 <- gene.essential %>% group_by(lap.sink.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Cancer")  %>%
mutate(Centrality = "Lap-Sink",quant = lap.sink.quant )
h3 <- gene.essential %>% group_by(lap.ssc.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Cancer")  %>%
mutate(Centrality = "Lap-SSC",quant = lap.ssc.quant )
total <- rbind(a1,a2,a3,b,d1,d2,d3,d4,h1,h2,h3)
overall.cors <- total %>% group_by(Centrality) %>%
do(fit = lm(freq ~ as.numeric(quant), data=.)) %>%  glance(fit)
overall.cors  <- overall.cors[,c(1,2,3,6)]
adjusted.pval <- p.adjust(unlist(overall.cors[,4]),method = "fdr")
adjusted.pval <- formatC(adjusted.pval, format = "e", digits = 2)
overall.cors[,4] <- formatC(unlist(pull(overall.cors[,4])), format = "e", digits = 2)
print(xtable(overall.cors), include.rownames = F)
text.vals <- paste("Adj r-squared:",formatC(pull(overall.cors[,2]),digits = 2),
"\n p-value:", pull(overall.cors[,4]), "\n Adj p-value:",
adjusted.pval)
overall.cors$label <- text.vals
ggplot(total, aes(y = 100*freq, x= quant)) + geom_point()+
geom_smooth(method= "lm") + #geom_smooth(method= "loess", color="green" , fill = "red") +
facet_wrap(~Centrality ,ncol = 3) +theme_bw()+
labs(x = "Normalized Centrality Score (Eq. 20)", y = "% of Genes that are Cancer-related (Eq. 21)")+
theme(strip.text = element_text(face="bold", size=20),
plot.title = element_text(size = 20),
axis.title = element_text(size = 30),
legend.text = element_text(size = 9),
legend.title=element_text(face = "bold", size = 9),
axis.text.y=element_text(size = 12),
axis.text.x=element_text(size = 12),
axis.ticks.y=element_blank()) +
geom_text(data=overall.cors, x = 50, y =70,
aes(x,y,label=label),size = 6, inherit.aes=FALSE)
ggsave("images/Human_Regression.pdf",
width = 10, height = 18, units = c("in"))
overall.regs <- total %>% group_by(Centrality) %>%
do(fit = lm(freq ~ as.numeric(quant), data=.)) %>%  tidy(fit)
rm(list = ls())
library(dplyr)
library(broom)
library(ggplot2)
library(xtable)
gene.essential <- readRDS("Mouse Processing/MMgene_essentials.rds")
gene.essential$Description <- factor(gene.essential$Description)
# levels(gene.temp$Description)
gene.essential$Description <- relevel(gene.essential$Description,ref = "Normal")
a1 <- gene.essential %>% group_by(katz.ssc.quant, Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Lethal") %>%
mutate(., Centrality = "Katz-Source-Sink",quant = katz.ssc.quant)
a2 <- gene.essential %>% group_by(katz.source.quant, Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Lethal") %>%
mutate(., Centrality = "Katz-Source",quant = katz.source.quant)
a3 <- gene.essential %>% group_by(katz.sink.quant, Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Lethal") %>%
mutate(., Centrality = "Katz-Sink",quant = katz.sink.quant)
b <- gene.essential %>% group_by(deg.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Lethal") %>%
mutate(Centrality = "Degree",quant = deg.quant )
d1 <- gene.essential %>% group_by(pgr.source.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Lethal") %>%
mutate(Centrality = "PageRank-Source",quant = pgr.source.quant)
d2 <- gene.essential %>% group_by(pgr.sink.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Lethal") %>%
mutate(Centrality = "PageRank-Sink",quant = pgr.sink.quant)
d3 <- gene.essential %>% group_by(pgr.ssc.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Lethal") %>%
mutate(Centrality = "PageRank-SSC",quant = pgr.ssc.quant)
d4 <- gene.essential %>% group_by(pgr.und.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Lethal")  %>%
mutate(Centrality = "PageRank-Und",quant = pgr.und.quant )
h1 <- gene.essential %>% group_by(lap.source.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Lethal")  %>%
mutate(Centrality = "Lap-Source",quant = lap.source.quant )
h2 <- gene.essential %>% group_by(lap.sink.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Lethal")  %>%
mutate(Centrality = "Lap-Sink",quant = lap.sink.quant )
h3 <- gene.essential %>% group_by(lap.ssc.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Lethal")  %>%
mutate(Centrality = "Lap-SSC",quant = lap.ssc.quant )
total <- rbind(a1,a2,a3,b,d1,d2,d3,d4,h1,h2,h3)
overall.cors <- total %>% group_by(Centrality) %>%
do(fit = lm(freq ~ as.numeric(quant), data=.)) %>%  glance(fit)
overall.cors  <- overall.cors[,c(1,2,3,6)]
adjusted.pval <- p.adjust(unlist(overall.cors[,4]),method = "fdr")
adjusted.pval <- formatC(adjusted.pval, format = "e", digits = 2)
overall.cors[,4] <- formatC(unlist(pull(overall.cors[,4])), format = "e", digits = 2)
print(xtable(overall.cors), include.rownames = F)
text.vals <- paste("Adjusted r-squared:",formatC(pull(overall.cors[,2]),digits = 2),
"\n p-value:", pull(overall.cors[,4]), "\n Adj p-value:",
adjusted.pval)
overall.cors$label <- text.vals
ggplot(total, aes(y = 100 * freq, x= quant)) + geom_point()+
geom_smooth(method= "lm") + #geom_smooth(method= "loess", color="green" , fill = "red") +
facet_wrap(~Centrality ,ncol = 3) +theme_bw()+
labs(x = "Normalized Centrality Score (Eq. 20)", y = "% of Genes that are Lethal (Eq. 21)")+
theme(strip.text = element_text(face="bold", size=20),
plot.title = element_text(size = 20),
axis.title = element_text(size = 30),
legend.text = element_text(size = 9),
legend.title=element_text(face = "bold", size = 9),
axis.text.y=element_text(size = 12),
axis.text.x=element_text(size = 12),
axis.ticks.y=element_blank()) +
geom_text(data=overall.cors, x = 50, y =30,
aes(x,y,label=label),size = 6, inherit.aes=FALSE)
ggsave("images/Mouse_Regression.pdf",
width = 10, height = 18, units = c("in"))
overall.regs <- total %>% group_by(Centrality) %>%
do(fit = lm(freq ~ as.numeric(quant), data=.)) %>%  tidy(fit)
overall.regs <- total %>% group_by(Centrality) %>%
do(fit = lm((100*freq) ~ as.numeric(quant), data=.)) %>%  tidy(fit)
overall.regs$term[overall.regs$term == "as.numeric(quant)"] <- "Coefficient"
overall.regs[,c(3,4,5,6)] <- sapply(overall.regs[,c(3,4,5,6)], FUN = formatC,
format = "e", digits = 2
)
print(xtable(overall.regs), include.rownames = F, digits = 2,
display=c("s","s", "s", "s","g"),
math.style.exponents = T)
overall.regs <- total %>% group_by(Centrality) %>%
do(fit = lm((freq) ~ as.numeric(quant), data=.)) %>%  tidy(fit)
overall.regs$term[overall.regs$term == "as.numeric(quant)"] <- "Coefficient"
overall.regs[,c(3,4,5,6)] <- sapply(overall.regs[,c(3,4,5,6)], FUN = formatC,
format = "e", digits = 2
)
print(xtable(overall.regs), include.rownames = F, digits = 2,
display=c("s","s", "s", "s","g"),
math.style.exponents = T)
var  <- "katz.ssc.quant"
cent <- "Katz_Source_Sink"
print(xtable(overall.regs), include.rownames = F, digits = 2,
display=c("s","s", "s", "s","g"),
math.style.exponents = T)
#reporting percentage
overall.regs <- total %>% group_by(Centrality) %>%
do(fit = lm((100*freq) ~ as.numeric(quant), data=.)) %>%  tidy(fit)
overall.regs$term[overall.regs$term == "as.numeric(quant)"] <- "Coefficient"
overall.regs[,c(3,4,5,6)] <- sapply(overall.regs[,c(3,4,5,6)], FUN = formatC,
format = "e", digits = 2
)
print(xtable(overall.regs), include.rownames = F, digits = 2,
display=c("s","s", "s", "s","g"),
math.style.exponents = T)
var  <- "katz.ssc.quant"
ggplot(total, aes(y = 100 * freq, x= quant)) + geom_point()+
geom_smooth(method= "lm") + #geom_smooth(method= "loess", color="green" , fill = "red") +
facet_wrap(~Centrality ,ncol = 3) +theme_bw()+
labs(x = "Normalized Centrality Score (Eq. 20)", y = "% of Genes that are Lethal (Eq. 21)")+
theme(strip.text = element_text(face="bold", size=20),
plot.title = element_text(size = 20),
axis.title = element_text(size = 30),
legend.text = element_text(size = 9),
legend.title=element_text(face = "bold", size = 9),
axis.text.y=element_text(size = 12),
axis.text.x=element_text(size = 12),
axis.ticks.y=element_blank()) +
geom_text(data=overall.cors, x = 50, y =30,
aes(x,y,label=label),size = 6, inherit.aes=FALSE)
ggsave("images/Mouse_Regression.pdf",
width = 10, height = 18, units = c("in"))
rm(list = ls())
library(dplyr)
library(broom)
library(ggplot2)
library(xtable)
gene.essential <- readRDS("Human Processing/gene_essentials.rds")
gene.essential$Description <- factor(gene.essential$Description)
# levels(gene.temp$Description)
gene.essential$Description <- relevel(gene.essential$Description,ref = "Normal")
a1 <- gene.essential %>% group_by(katz.ssc.quant, Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Cancer") %>%
mutate(., Centrality = "Katz-SSC",quant = katz.ssc.quant)
a2 <- gene.essential %>% group_by(katz.source.quant, Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Cancer") %>%
mutate(., Centrality = "Katz-Source",quant = katz.source.quant)
a3 <- gene.essential %>% group_by(katz.sink.quant, Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Cancer") %>%
mutate(., Centrality = "Katz-Sink",quant = katz.sink.quant)
b <- gene.essential %>% group_by(deg.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Cancer") %>%
mutate(Centrality = "Degree",quant = deg.quant )
d1 <- gene.essential %>% group_by(pgr.source.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Cancer") %>%
mutate(Centrality = "PageRank-Source",quant = pgr.source.quant)
d2 <- gene.essential %>% group_by(pgr.sink.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Cancer") %>%
mutate(Centrality = "PageRank-Sink",quant = pgr.sink.quant)
d3 <- gene.essential %>% group_by(pgr.ssc.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Cancer") %>%
mutate(Centrality = "PageRank-SSC",quant = pgr.ssc.quant)
d4 <- gene.essential %>% group_by(pgr.und.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Cancer")  %>%
mutate(Centrality = "PageRank-Und",quant = pgr.und.quant )
h1 <- gene.essential %>% group_by(lap.source.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Cancer")  %>%
mutate(Centrality = "Lap-Source",quant = lap.source.quant )
h2 <- gene.essential %>% group_by(lap.sink.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Cancer")  %>%
mutate(Centrality = "Lap-Sink",quant = lap.sink.quant )
h3 <- gene.essential %>% group_by(lap.ssc.quant,Description)  %>%
summarise(n = n()) %>% mutate(freq = n/ sum(n)) %>%
filter(., Description== "Cancer")  %>%
mutate(Centrality = "Lap-SSC",quant = lap.ssc.quant )
total <- rbind(a1,a2,a3,b,d1,d2,d3,d4,h1,h2,h3)
overall.cors <- total %>% group_by(Centrality) %>%
do(fit = lm(freq ~ as.numeric(quant), data=.)) %>%  glance(fit)
overall.cors  <- overall.cors[,c(1,2,3,6)]
adjusted.pval <- p.adjust(unlist(overall.cors[,4]),method = "fdr")
adjusted.pval <- formatC(adjusted.pval, format = "e", digits = 2)
overall.cors[,4] <- formatC(unlist(pull(overall.cors[,4])), format = "e", digits = 2)
print(xtable(overall.cors), include.rownames = F)
text.vals <- paste("Adj r-squared:",formatC(pull(overall.cors[,2]),digits = 2),
"\n p-value:", pull(overall.cors[,4]), "\n Adj p-value:",
adjusted.pval)
overall.cors$label <- text.vals
ggplot(total, aes(y = 100*freq, x= quant)) + geom_point()+
geom_smooth(method= "lm") + #geom_smooth(method= "loess", color="green" , fill = "red") +
facet_wrap(~Centrality ,ncol = 3) +theme_bw()+
labs(x = "Normalized Centrality Score (Eq. 20)", y = "% of Genes that are Cancer-related (Eq. 21)")+
theme(strip.text = element_text(face="bold", size=20),
plot.title = element_text(size = 20),
axis.title = element_text(size = 30),
legend.text = element_text(size = 9),
legend.title=element_text(face = "bold", size = 9),
axis.text.y=element_text(size = 12),
axis.text.x=element_text(size = 12),
axis.ticks.y=element_blank()) +
geom_text(data=overall.cors, x = 50, y =70,
aes(x,y,label=label),size = 6, inherit.aes=FALSE)
ggsave("images/Human_Regression.pdf",
width = 10, height = 18, units = c("in"))
overall.regs <- total %>% group_by(Centrality) %>%
do(fit = lm((100*freq) ~ as.numeric(quant), data=.)) %>%  tidy(fit)
overall.regs$term[overall.regs$term == "as.numeric(quant)"] <- "Coefficient"
overall.regs[,c(3,4,5,6)] <- sapply(overall.regs[,c(3,4,5,6)], FUN = formatC,
format = "e", digits = 2
)
print(xtable(overall.regs), include.rownames = F, digits = 2,
display=c("s","s", "s", "s","g"),
math.style.exponents = T)
